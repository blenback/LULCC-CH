@charset = UTF-8
@submodel.name = AllocateTransitions
@author = Dinamica Team
@organization = CSR / UFMG
@submodel.description = Performs transition allocation on a landscape map using Expander and Patcher according to a transition matrix specifying the net rates, a probability map and other parameters defining patch geometry.
@submodel.group = Simulation
@showproperties = yes
@date = 2025-Aug-06 16:46:48
@version = 7.2.0.20221230
@submodel.largeicon = iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAFFUlEQVR42r2XWVBbVRjHedBH9cVWX8NSFCg3AX1VpzrOqFNnOuo44ozjOr6oT1XaClZBslEoAdpStlhCICwWatmXJCA7wQBhCUuAgEBBtHUdn/z7ffcE2nCB0YfwzfwnyV2+3+/cc3IyCQsLC7vPlBRbm5cUh9w3DifMYiazKWEP8IGl0njMFRzD3OXI0IYYzGIms1ngYbaauXIMh1XMYiazWeAof5jOi5RPWm7+A1tzaMK9uZgVEDi6IzCVKwRutP+JRsdfIQn35mKWQmDSJATanL/A3nM7JOHeXMwKFqAF4ckRAt19q+gbXA9JuDcXs3KTdgmMZwsB15AP7pHFkIR7czFLITCWFSHmxz0F77g3JOHeXMxSCIxeEAILnhEsTY2GJNybi1kKgZFMIbA524Wt+Z6QhHtzMStIgHcll1EItPYCHQP/L50U+5BI5wHXcW95nRErb7fAsEEItA8Djh/+e5yj9EpP9qLpBVTXJItj7r2v5d5czFIIDOmEQBvdbB+neOimCRF+Lx/bFSedaxpYQfbFE9DpYmEpS4Kt6hO0DW+I+3Zdz725mKUQGNAGBPhGL9A1DxSVJaOy6iO0uhbhmBXH7dMizjmg3tkLY+YTMBjUFA1KS1+F1fo2KiveQ8ugB46Zu9dzuDcXsxQC/RkBAQJ1+YHiihTotI+jpOQUyi1JqG3IRof3dzgWxXlbiw26jGgZbDQmyq8FBS+hguBW6zvyPS39djiXCE5ff/u86M3FLIVAb7oQ6FghuC0Fenqk3DQ//zm5aXn5W/T6Pm72NqO4+rwsZzQkyHCRBJhMT8Fm+xBm8+sk8yKys55EUeXncNIG2EnSrQtCgFkKgZ40IVBQcQ56bazccLt5ZeUHNKp3ZZGiwpMkFx903kDRGxKh0ydAq9Mgg6PV4GuthLS0KFyxnEb7Mq2XgACzFALdXwmBtLTI4OaBuWWJ4uJT0OvVO+cYqtUnoignQU5doRrN5uPor4qBtyEKC86n8YfPgI3VTni2aOqWhQCzFAJdXwqB9PToex4rCyTQNDxPa+EVGS6PlqIluMWUgLFraixUx2O5LgZrN1XYcH2MrQUrvLfuoH8daKD5v06Lt45SI3ZimRUs8GYcnOf3FtiWkEPvdQzO1sBVpIbXImHWdhy+mkgsD53F6t+AewOomiQYpZby7dTd2DxCgFnMDBJwfLG/wM4jp5QRfKJEwlRZPGYqYuG7roZ/thH+32gB02itYwQa3zuWwD7ALIVAR4rqQAEefQaN3nVVwuQ1CV6CzzedhH/Nj2ma31oaXRntduXu/WN2CQFmBQnk04f2c0qB7fnmx87w5ksaTH3DcAnzVdHw3QEWKcWDFPodMA8fnKsDQoBZ+bsF2s4KgTQSkKGUbPo2lGdq0GJSw8MjN0uYtkqYq5GwVB+LHx0vw7fxK6Y36RHTb0JBH1BIkKJ9cqlHCDBLIdB6Rgjkp0ehxqiG0yhhMCserrx4uAnu2YZXS1isl7DSpMZ6exx+6tZgyd8D323a4WjXK+wH8rqByz3K5DiFALMUAs3JQsCR+gi601X4PkOF/gsqDOeq4C4Ix4Q5HF5rOHy14fDfCMdacwQ27RHYcqrws/1RrIymwkvfgMlbwHe0HgwdgLEzOBltQoBZCoGmM5GH9seEWco1kBqHxs8i0fipKrQhBrPuFThifO0xFx84zJiSYja3BR6kxFGeoTx7SDlBkSgPhQX+IrPEkYDRYYXh9/8LP5mktQmnjoAAAAAASUVORK5CYII=
@submodel.smallicon = iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAABuklEQVR42qWT3UuTYRiH92d0VOwFsdDIzYOOrY5EPBkeFXTUgfg3dJDmu49UfLdsiWtJbq4URMTh/MCNlh8o+3RzJY7FykLzLyjo6n4SJNx7MNcNFw/Pw/27Hp4bHsvY/RtVo8fKqOPapVAZlbUYPRqNlspalE1VJPqT2divulC9qlT2XBBPHpPcOqkL1VsjKGaKlPKlulC9NYJs6it72aMLfKOQP6GYP6WQO/67V+eqt0awuguJrDxFWE+fkcjB3PIG/nEHsWSReObsfGWHWsHK/m9eBHsJR3pZ2i3w/jNMznrQ9WZ8vg7CoQcsrEWIl6W3ZCIY9nXh1FuYmOhmOvyQMX8nurMV3WXH5bmN4b2HMWzj3Zu7bHw3EQz0N+F22/F67xB45WDQ2caUYWN7soXqoo0f6T4qn0KkKofEymaCgWY8nnZcInkqt269vMVB+DpfPvSRkxvfyuCn87IKUxkTwRMR6CLwP7Oz+ryNj6GbVBKPSEs4IAMOyOCCsr4WxrdNBPOPr7A5aCVlWCkENcozGkfRq5wm7RxUS0T3YWgdRuLgXvtH8N9/weVoWm70N6qsRUoT2htE+wOBWtkns6speAAAAABJRU5ErkJggg==
Script {{
    // The landscape map. 
    @submodel.in.constant.advanced = no
    @submodel.in.constant.description = The initial landscape map.
    @submodel.in.constant.name = lanscape
    @submodel.in.constant.optional = no
    @submodel.in.constant.order = 1
    landscape := CategoricalMap .UNBOUND;

    // This matriz defines the percentage of total transitions performed by expansion 
    // of existent patches (using Expander operator). The complement of this matrix 
    // defines the percentage of transitions performed by generation of new patches 
    // (using Patcher operator). 
    @submodel.in.constant.advanced = no
    @submodel.in.constant.description = This matriz defines the percentage of total transitions performed by expansion of existent patches (using Expander operator). The complement of this matrix defines the percentage of transitions performed by generation of new patches (using Patcher operator).
    @submodel.in.constant.name = percentOfTransitionsByExpansion
    @submodel.in.constant.optional = no
    @submodel.in.constant.order = 4
    percentOfTransitionsByExpansion := PercentMatrix .UNBOUND;

    // The transition matrix defining net transition rates. 
    @submodel.in.constant.advanced = no
    @submodel.in.constant.description = The matriz defining the net rate of each transition.
    @submodel.in.constant.name = transitionMatrix
    @submodel.in.constant.optional = no
    @submodel.in.constant.order = 3
    transitionMatrix := TransitionMatrix .UNBOUND;

    // The parameters used to expand existent patches. The parameters are used by 
    // Expander operator. 
    @submodel.in.constant.advanced = no
    @submodel.in.constant.description = The parameters used to expand existent patches. The parameters are used by Expander operator.
    @submodel.in.constant.name = patchExpansionParameters
    @submodel.in.constant.optional = no
    @submodel.in.constant.order = 5
    patchExpansionParameters := TransitionFunctionParameterMatrix .UNBOUND;

    // If true, print allocation info on the application console. This is useful to 
    // help identify problems in the transition rates and probability maps. 
    @alias = print transition info?
    @submodel.in.constant.advanced = no
    @submodel.in.constant.description = If true, print allocation info on the application console. This is useful to help identify problems in the transition rates and probability maps.
    @submodel.in.constant.name = printTransitionInfo
    @submodel.in.constant.optional = yes
    @submodel.in.constant.order = 7
    printTransitionInfo := BooleanValue .yes;

    // The parameters used to generate new patches. These parameters are used by 
    // Patcher operator. 
    @submodel.in.constant.advanced = no
    @submodel.in.constant.description = The parameters used to generate new patches. These parameters are used by Patcher operator.
    @submodel.in.constant.name = patchGenerationParameters
    @submodel.in.constant.optional = no
    @submodel.in.constant.order = 6
    patchGenerationParameters := TransitionFunctionParameterMatrix .UNBOUND;

    // Calculate the quantity of changes to be executed. 
    @collapsed = no
    _ := Group .none {{
        transitionRates := CalcChangeMatrix landscape transitionMatrix;

        @alias = split transition rates
        modulatedChanges complementaryChanges := ModulateChangeMatrix transitionRates percentOfTransitionsByExpansion;
    }};

    // The probability map. 
    @submodel.in.constant.advanced = no
    @submodel.in.constant.description = The map defining the probability of occurrence of each transition.
    @submodel.in.constant.name = probabilities
    @submodel.in.constant.optional = no
    @submodel.in.constant.order = 2
    probabilities := Map .UNBOUND;

    // Execute the transition functions. 
    @collapsed = no
    _ := Group .none {{
        LogPolicy .debug2 printTransitionInfo {{
            @alias = landscape expander
            changedLandscape corrodedProbabilities remainingChanges := Expander {
                landscape = landscape,
                probabilities = probabilities,
                changes = modulatedChanges,
                transitionParameters = patchExpansionParameters,
                neighborWindowLines = 3,
                neighborWindowColumns = 3,
                pruneFactor = 10
            };
        }};

        combinedTransitionRates := AddChangeMatrix complementaryChanges remainingChanges;

        LogPolicy .debug2 printTransitionInfo {{
            landscapePatcher _ _ := Patcher {
                landscape = changedLandscape,
                probabilities = corrodedProbabilities,
                changes = combinedTransitionRates,
                transitionParameters = patchGenerationParameters,
                neighborWindowLines = 3,
                neighborWindowColumns = 3,
                pruneFactor = 10
            };
        }};
    }};

    // The landscape map resulting from the transition allocation. 
    @alias = resulting landscape
    @submodel.out.object.description = The resulting landscape map.
    @submodel.out.object.name = resultingLanscape
    @submodel.out.object.order = 1
    _ := CategoricalMap landscapePatcher;
}};